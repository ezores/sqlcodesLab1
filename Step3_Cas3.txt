Consultation de films:

Un client peut rechercher des films en utilisant n'importe quelle combinaison des éléments suivants :
Sous-chaîne du titre du film.
Plage d'années de sortie.
Nom du pays de production.
Langue d'origine.
Genre du film (par exemple, comédie, action, drame).
Sous-chaîne du nom du réalisateur.
Sous-chaîne du nom d'un acteur.

Résultat attendu :
Pour chaque film correspondant aux critères :
Titre et année de sortie.
Si aucun film ne correspond, afficher un message d'erreur.
Détails facultatifs :

Permettre à un client d'afficher les informations détaillées d'un film en le sélectionnant dans les résultats :
Titre, année, pays, langue, durée, genres, réalisateur, scénaristes, acteurs (et leurs rôles), synopsis, affiche et bandes-annonces.
--P-e il me manque des informations ou bien incomplet

2. Recherche de Film:

	CREATE OR REPLACE PROCEDURE p_rechercheFilms(
		p_titre          IN VARCHAR2 DEFAULT NULL,
		p_anneeMin       IN NUMBER DEFAULT NULL,
		p_anneeMax       IN NUMBER DEFAULT NULL,
		p_nomPays        IN VARCHAR2 DEFAULT NULL,
		p_langue         IN VARCHAR2 DEFAULT NULL,
		p_nomGenre       IN VARCHAR2 DEFAULT NULL,
		p_nomRealisateur IN VARCHAR2 DEFAULT NULL,
		p_nomActeur      IN VARCHAR2 DEFAULT NULL,
		p_result         OUT SYS_REFCURSOR
	) AS
	BEGIN
		OPEN p_result FOR
		SELECT DISTINCT
			   f.titre,
			   f.anneeSortie
		FROM   Film f
			   LEFT JOIN FilmPays fp ON f.idFilm = fp.idFilm
			   LEFT JOIN Pays p ON fp.idPays = p.idPays
			   LEFT JOIN FilmGenre fg ON f.idFilm = fg.idFilm
			   LEFT JOIN Genre g ON fg.idGenre = g.idGenre
			   LEFT JOIN FilmRealisateur fr ON f.idFilm = fr.idFilm
			   LEFT JOIN Realisateur r ON fr.idRealisateur = r.idRealisateur
			   LEFT JOIN FilmActeur fa ON f.idFilm = fa.idFilm
			   LEFT JOIN Acteur a ON fa.idActeur = a.idActeur
		WHERE  (p_titre IS NULL OR LOWER(f.titre) LIKE '%' || LOWER(p_titre) || '%')
		   AND (p_anneeMin IS NULL OR f.anneeSortie >= p_anneeMin)
		   AND (p_anneeMax IS NULL OR f.anneeSortie <= p_anneeMax)
		   AND (p_nomPays IS NULL OR LOWER(p.nomPays) = LOWER(p_nomPays))
		   AND (p_langue IS NULL OR LOWER(f.langueOriginale) = LOWER(p_langue))
		   AND (p_nomGenre IS NULL OR LOWER(g.nomGenre) = LOWER(p_nomGenre))
		   AND (p_nomRealisateur IS NULL OR LOWER(r.nomRealisateur) LIKE '%' || LOWER(p_nomRealisateur) || '%')
		   AND (p_nomActeur IS NULL OR LOWER(a.nomActeur) LIKE '%' || LOWER(p_nomActeur) || '%');
	END;
	
TEST #1 (Film):
	VARIABLE rc REFCURSOR;
	BEGIN
		p_rechercheFilms(p_titre => 'Titanic', p_result => :rc);
	END;
	PRINT rc;


Expected Result: Titanic (1997)


TEST #2 (RANGE ANNEES):
	VARIABLE rc REFCURSOR;
	BEGIN
		p_rechercheFilms(p_anneeMin => 1995, p_anneeMax => 2000, p_result => :rc);
	END;
	PRINT rc;


Expected Result: Liste de films entre 1995 et 2000


TEST #3 (PAYS ET GENRE):
	VARIABLE rc REFCURSOR;
	BEGIN
		p_rechercheFilms(p_nomPays => 'Turkey', p_nomGenre => 'Action', p_result => :rc);
	END;
	PRINT rc;


TEST #4: (NON EXISTANT):
	VARIABLE rc REFCURSOR;
	BEGIN
		p_rechercheFilms(p_titre => 'NonExistentMovie', p_result => :rc);
	END;
	PRINT rc;


CHATGPT POUR CETTE PARTIE:

To improve query performance, add indexes on frequently searched columns:
CREATE INDEX idx_titre ON Film(titre);
CREATE INDEX idx_anneeSortie ON Film(anneeSortie);
CREATE INDEX idx_nomPays ON Pays(nomPays);
CREATE INDEX idx_nomGenre ON Genre(nomGenre);
CREATE INDEX idx_nomRealisateur ON Realisateur(nomRealisateur);
CREATE INDEX idx_nomActeur ON Acteur(nomActeur);

To display detailed movie information, use a query like this:
SELECT f.titre,
       f.anneeSortie,
       LISTAGG(p.nomPays, ', ') WITHIN GROUP (ORDER BY p.nomPays) AS pays,
       f.langueOriginale,
       f.resume,
       LISTAGG(g.nomGenre, ', ') WITHIN GROUP (ORDER BY g.nomGenre) AS genres,
       r.nomRealisateur,
       LISTAGG(a.nomActeur || ' as ' || fa.roleActeur, ', ') WITHIN GROUP (ORDER BY a.nomActeur) AS acteurs
FROM   Film f
       LEFT JOIN FilmPays fp ON f.idFilm = fp.idFilm
       LEFT JOIN Pays p ON fp.idPays = p.idPays
       LEFT JOIN FilmGenre fg ON f.idFilm = fg.idFilm
       LEFT JOIN Genre g ON fg.idGenre = g.idGenre
       LEFT JOIN FilmRealisateur fr ON f.idFilm = fr.idFilm
       LEFT JOIN Realisateur r ON fr.idRealisateur = r.idRealisateur
       LEFT JOIN FilmActeur fa ON f.idFilm = fa.idFilm
       LEFT JOIN Acteur a ON fa.idActeur = a.idActeur
WHERE  f.idFilm = :idFilm
GROUP BY f.titre, f.anneeSortie, f.langueOriginale, f.resume, r.nomRealisateur;
