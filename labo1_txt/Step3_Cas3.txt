Consultation de films:

Un client peut rechercher des films en utilisant n'importe quelle combinaison des éléments suivants :
Sous-chaîne du titre du film.
Plage d'années de sortie.
Nom du pays de production.
Langue d'origine.
Genre du film (par exemple, comédie, action, drame).
Sous-chaîne du nom du réalisateur.
Sous-chaîne du nom d'un acteur.

Résultat attendu :
Pour chaque film correspondant aux critères :
Titre et année de sortie.
Si aucun film ne correspond, afficher un message d'erreur.
Détails facultatifs :

Permettre à un client d'afficher les informations détaillées d'un film en le sélectionnant dans les résultats :
Titre, année, pays, langue, durée, genres, réalisateur, scénaristes, acteurs (et leurs rôles), synopsis, affiche et bandes-annonces.
--P-e il me manque des informations ou bien incomplet

2. Recherche de Film:

	CREATE OR REPLACE PROCEDURE p_rechercheFilms(
		p_titre          IN VARCHAR2 DEFAULT NULL,
		p_anneeMin       IN NUMBER DEFAULT NULL,
		p_anneeMax       IN NUMBER DEFAULT NULL,
		p_nomPays        IN VARCHAR2 DEFAULT NULL,
		p_langue         IN VARCHAR2 DEFAULT NULL,
		p_nom       IN VARCHAR2 DEFAULT NULL,
		p_nom IN VARCHAR2 DEFAULT NULL,
		p_nom      IN VARCHAR2 DEFAULT NULL,
		p_result         OUT SYS_REFCURSOR
	) AS
	BEGIN
		OPEN p_result FOR
		SELECT DISTINCT
			   f.titre,
			   f.anneeSortie
		FROM   Film f
			   LEFT JOIN FilmPays fp ON f.FilmId = fp.FilmId
			   LEFT JOIN Pays p ON fp.PaysId = p.PaysId
			   LEFT JOIN GenreFilm fg ON f.FilmId = fg.FilmId
			   LEFT JOIN Genre g ON fg.GenreId = g.GenreId
			   LEFT JOIN Realisateur r ON f.RealisateurId = r.RealisateurId
			   LEFT JOIN ActeurFilm fa ON f.FilmId = fa.FilmId
			   LEFT JOIN Acteur a ON fa.ActeurId = a.ActeurId
		WHERE  (p_titre IS NULL OR LOWER(f.titre) LIKE '%' || LOWER(p_titre) || '%')
		   AND (p_anneeMin IS NULL OR f.anneeSortie >= p_anneeMin)
		   AND (p_anneeMax IS NULL OR f.anneeSortie <= p_anneeMax)
		   AND (p_nomPays IS NULL OR LOWER(p.nomPays) = LOWER(p_nomPays))
		   AND (p_langue IS NULL OR LOWER(f.langueOriginale) = LOWER(p_langue))
		   AND (p_nom IS NULL OR LOWER(g.nom) = LOWER(p_nom))
		   AND (p_nom IS NULL OR LOWER(r.nom) LIKE '%' || LOWER(p_nom) || '%')
		   AND (p_nom IS NULL OR LOWER(a.nom) LIKE '%' || LOWER(p_nom) || '%');
	END;
	
TEST #1 (Film):
	VARIABLE rc REFCURSOR;
	BEGIN
		p_rechercheFilms(p_titre => 'Titanic', p_result => :rc);
	END;
	PRINT rc;


Expected Result: Titanic (1997)


TEST #2 (RANGE ANNEES):
	VARIABLE rc REFCURSOR;
	BEGIN
		p_rechercheFilms(p_anneeMin => 1995, p_anneeMax => 2000, p_result => :rc);
	END;
	PRINT rc;


Expected Result: Liste de films entre 1995 et 2000


TEST #3 (PAYS ET GENRE):
	VARIABLE rc REFCURSOR;
	BEGIN
		p_rechercheFilms(p_nomPays => 'Turkey', p_nom => 'Action', p_result => :rc);
	END;
	PRINT rc;


TEST #4: (NON EXISTANT):
	VARIABLE rc REFCURSOR;
	BEGIN
		p_rechercheFilms(p_titre => 'NonExistentMovie', p_result => :rc);
	END;
	PRINT rc;


CHATGPT POUR CETTE PARTIE:

To improve query performance, add indexes on frequently searched columns:
CREATE INDEX idx_titre ON Film(titre);
CREATE INDEX idx_anneeSortie ON Film(anneeSortie);
CREATE INDEX idx_nomPays ON Pays(nomPays);
CREATE INDEX idx_nom ON Genre(nom);
CREATE INDEX idx_nom ON Realisateur(nom);
CREATE INDEX idx_nom ON Acteur(nom);

To display detailed movie information, use a query like this:
SELECT f.titre,
       f.anneeSortie,
       LISTAGG(p.nomPays, ', ') WITHIN GROUP (ORDER BY p.nomPays) AS pays,
       f.langueOriginale,
       f.resume,
       LISTAGG(g.nom, ', ') WITHIN GROUP (ORDER BY g.nom) AS genres,
       r.nom,
       LISTAGG(a.nom || ' as ' || fa.roleActeur, ', ') WITHIN GROUP (ORDER BY a.nom) AS acteurs
FROM   Film f
       LEFT JOIN FilmPays fp ON f.FilmId = fp.FilmId
       LEFT JOIN Pays p ON fp.PaysId = p.PaysId
       LEFT JOIN GenreFilm fg ON f.FilmId = fg.FilmId
       LEFT JOIN Genre g ON fg.GenreId = g.GenreId
       LEFT JOIN FilmRealisateur fr ON f.FilmId = fr.FilmId
       LEFT JOIN Realisateur r ON fr.RealisateurId = r.RealisateurId
       LEFT JOIN ActeurFilm fa ON f.FilmId = fa.FilmId
       LEFT JOIN Acteur a ON fa.ActeurId = a.ActeurId
WHERE  f.FilmId = :FilmId
GROUP BY f.titre, f.anneeSortie, f.langueOriginale, f.resume, r.nom;
